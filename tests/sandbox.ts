import logger from "../src/backend/logger"

logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")

logger.setShowTimestamp(false)

logger.trace("This is a message")
logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")

logger.setShowTimestamp(true)
logger.setShowLevel(false)

logger.trace("This is a message")
logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")

logger.setShowTimestamp(true)
logger.setShowLevel(true)
logger.setForeignObjectPadding("after-timestamp")

logger.trace("This is a message")
logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")

logger.setShowTimestamp(true)
logger.setShowLevel(true)
logger.setForeignObjectPadding("after-level")

logger.trace("This is a message")
logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")

logger.setShowTimestamp(false)
logger.setShowLevel(false)
logger.setForeignObjectPadding("after-level")

logger.trace("This is a message")
logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")

logger.setShowTimestamp(false)
logger.setShowLevel(false)
logger.setForeignObjectPadding("after-level")
logger.setForeignObjectStartAtNewLine(true)

logger.trace("This is a message")
logger.trace({ a: "b" }, "This is a message")
logger.debug("This is a message")
logger.info("This is a message")
logger.warn("This is a message")
logger.error("This is a message")
logger.fatal("This is a message")
